{"remainingRequest":"C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\src\\views\\site\\index.vue?vue&type=style&index=0&id=a6b566b8&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\src\\views\\site\\index.vue","mtime":1748591438712},{"path":"C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1731167281000},{"path":"C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1731167278000},{"path":"C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1731167279000},{"path":"C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1731167284000},{"path":"C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1731167278000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouaGVhZGVyIHsNCiAgcGFkZGluZy1ib3R0b206IDE2cHg7DQp9DQoucGFnaW5hdGlvbiB7DQogIG1hcmdpbi10b3A6IDE2cHg7DQogIHRleHQtYWxpZ246IHJpZ2h0Ow0KfQ0K"},{"version":3,"sources":["C:\\Users\\86195\\Desktop\\git_tennis\\tennis\\java1234-mall-vue\\src\\views\\site\\index.vue"],"names":[],"mappings":";AA0TA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB","file":"C:/Users/86195/Desktop/git_tennis/tennis/java1234-mall-vue/src/views/site/index.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <el-card>\r\n    <el-row :gutter=\"20\" class=\"header\">\r\n      <el-col :span=\"7\">\r\n        <el-input v-model=\"queryForm.query\" placeholder=\"请输入场地名称...\" clearable />\r\n      </el-col>\r\n      <el-button type=\"primary\" :icon=\"Search\" @click=\"getVenueList\">搜索</el-button>\r\n      <el-button type=\"success\" @click=\"openAddDialog\">新增场地</el-button>\r\n    </el-row>\r\n\r\n    <el-table :data=\"venueList\" style=\"width: 100%\" stripe>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n      <el-table-column prop=\"venueName\" label=\"场地名称\" width=\"180\" />\r\n      <el-table-column prop=\"imageUrl\" label=\"场地图片\" width=\"150\">\r\n        <template v-slot=\"scope\">\r\n          <img :src=\"scope.row.imageUrl\" width=\"60\" height=\"60\" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"容量（剩余/总）\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <!-- 显示每个时间段容量 -->\r\n          <div v-for=\"ts in scope.row.timeSlots\" :key=\"ts.id\" style=\"margin-bottom:6px;\">\r\n            <strong>{{ ts.startTime }} - {{ ts.endTime }}:</strong>\r\n            {{ ts.remainingCapacity }} / {{ ts.capacity }}\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n        <template v-slot=\"scope\">\r\n          <el-tag :type=\"scope.row.status === 1 ? 'success' : 'info'\">\r\n            {{ scope.row.status === 1 ? '启用' : '停用' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\" />\r\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"220\" align=\"center\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"primary\" @click=\"openEditDialog(scope.row)\">编辑</el-button>\r\n          <el-button type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-pagination\r\n      class=\"pagination\"\r\n      v-model:currentPage=\"queryForm.pageNum\"\r\n      :page-sizes=\"[5, 10, 20]\"\r\n      :page-size=\"queryForm.pageSize\"\r\n      :total=\"total\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n    />\r\n\r\n    <!-- 新增/编辑对话框 -->\r\n    <el-dialog v-model=\"dialogVisible\" :title=\"dialogTitle\" width=\"700px\">\r\n      <el-form :model=\"form\" label-width=\"100px\">\r\n        <el-form-item label=\"场地名称\">\r\n          <el-input v-model=\"form.venueName\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"上传图片\">\r\n          <el-upload\r\n            class=\"upload-demo\"\r\n            action=\"/admin/upload\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleUploadSuccess\"\r\n            :before-upload=\"beforeUpload\"\r\n          >\r\n            <el-button type=\"primary\">点击上传</el-button>\r\n          </el-upload>\r\n          <div v-if=\"form.imageUrl\" style=\"margin-top: 10px;\">\r\n            <img :src=\"form.imageUrl\" width=\"100\" height=\"100\" />\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"form.status\" placeholder=\"请选择\">\r\n            <el-option label=\"启用\" :value=\"1\" />\r\n            <el-option label=\"停用\" :value=\"0\" />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <!-- 时间段编辑 -->\r\n        <el-form-item label=\"时间段及容量\" style=\"width:100%\">\r\n          <div v-for=\"(slot, idx) in form.timeSlots\" :key=\"idx\" style=\"margin-bottom:10px; display:flex; align-items:center;\">\r\n            <el-time-picker\r\n              v-model=\"slot.startTime\"\r\n              placeholder=\"开始时间\"\r\n              value-format=\"HH:mm\"\r\n              :picker-options=\"{ selectableRange: ['00:00:00', '23:59:59'] }\"\r\n              style=\"width:120px; margin-right:10px;\"\r\n            />\r\n            <el-time-picker\r\n              v-model=\"slot.endTime\"\r\n              placeholder=\"结束时间\"\r\n              value-format=\"HH:mm\"\r\n              :picker-options=\"{ selectableRange: ['00:00:00', '23:59:59'] }\"\r\n              style=\"width:120px; margin-right:10px;\"\r\n            />\r\n            <el-input-number v-model.number=\"slot.capacity\" :min=\"1\" label=\"容量\" style=\"margin-right:10px; width:100px;\" />\r\n            <el-button @click=\"removeTimeSlot(idx)\" >删除</el-button>\r\n          </div>\r\n          <el-button type=\"primary\" style=\" margin-left:10px;\" @click=\"addTimeSlot\">添加时间段</el-button>\r\n          <div style=\"margin-top:6px; font-size:12px; color:#999;\">\r\n            每个时间段设置固定容量，预约时会减少对应时间段的剩余容量，容量每日重置。\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确认</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </el-card>\r\n</template>\r\n\r\n<script setup>\r\nconst dialogVisible = ref(false);\r\n\r\nimport { ref } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport { Search } from '@element-plus/icons-vue';\r\nimport axios from '@/util/axios';\r\n\r\nconst queryForm = ref({\r\n  query: '',\r\n  pageNum: 1,\r\n  pageSize: 10,\r\n});\r\n\r\nconst total = ref(0);\r\nconst venueList = ref([]);\r\n\r\nconst getVenueList = async () => {\r\nconst res = await axios.post('/admin/venue/list', queryForm.value);\r\n  if (res.data.code === 0) {\r\n    venueList.value = res.data.data.venueList.map(item => ({\r\n      ...item,\r\n      timeSlots: item.timeSlots || [], // 后端返回时间段数组 [{id, startTime, endTime, capacity, remainingCapacity}]\r\n    }));\r\n    total.value = res.data.data.total;\r\n  } else {\r\n    ElMessage.error(res.data.msg || '获取场地列表失败');\r\n  }\r\n   // 模拟测试数据\r\n   /* venueList.value = [\r\n    {\r\n      id: 1,\r\n      venueName: '网球场 A',\r\n      imageUrl: 'https://via.placeholder.com/60x60.png?text=A',\r\n      status: 1,\r\n      createTime: '2025-05-30 14:00:00',\r\n      timeSlots: [\r\n        { id: 1, startTime: '08:00', endTime: '10:00', capacity: 10, remainingCapacity: 6 },\r\n        { id: 2, startTime: '10:00', endTime: '12:00', capacity: 10, remainingCapacity: 3 },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      venueName: '篮球场 B',\r\n      imageUrl: 'https://via.placeholder.com/60x60.png?text=B',\r\n      status: 0,\r\n      createTime: '2025-05-28 09:30:00',\r\n      timeSlots: [\r\n        { id: 1, startTime: '09:00', endTime: '11:00', capacity: 20, remainingCapacity: 12 },\r\n        { id: 2, startTime: '13:00', endTime: '15:00', capacity: 20, remainingCapacity: 20 },\r\n      ],\r\n    }\r\n  ];\r\n  total.value = venueList.value.length;*/\r\n};\r\n\r\nconst handleSizeChange = (size) => {\r\n  queryForm.value.pageSize = size;\r\n  getVenueList();\r\n};\r\n\r\nconst handleCurrentChange = (page) => {\r\n  queryForm.value.pageNum = page;\r\n  getVenueList();\r\n};\r\n\r\n\r\nconst dialogTitle = ref('新增场地');\r\nconst form = ref({\r\n  id: null,\r\n  venueName: '',\r\n  imageUrl: '',\r\n  status: 1,\r\n  timeSlots: [], // 时间段数组\r\n});\r\n\r\nconst handleUploadSuccess = (res) => {\r\n  if (res.code === 0) {\r\n    form.value.imageUrl = res.data.url;\r\n    ElMessage.success('上传成功');\r\n  } else {\r\n    ElMessage.error(res.msg || '上传失败');\r\n  }\r\n};\r\n\r\nconst beforeUpload = (file) => {\r\n  const isImg = file.type.startsWith('image/');\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isImg) ElMessage.error('只能上传图片文件');\r\n  if (!isLt2M) ElMessage.error('图片大小不能超过 2MB');\r\n  return isImg && isLt2M;\r\n};\r\n\r\nconst openAddDialog = () => {\r\n  dialogTitle.value = '新增场地';\r\n  form.value = {\r\n    id: null,\r\n    venueName: '',\r\n    imageUrl: '',\r\n    status: 1,\r\n    timeSlots: [\r\n      { startTime: '08:00', endTime: '10:00', capacity: 10 },\r\n      { startTime: '10:00', endTime: '12:00', capacity: 10 },\r\n    ], // 默认空时间段示例\r\n  };\r\n  dialogVisible.value = true;\r\n};\r\n\r\nconst openEditDialog = (row) => {\r\n  dialogTitle.value = '编辑场地';\r\n  // 需要把时间段格式化成合适格式（字符串）\r\n  form.value = {\r\n    id: row.id,\r\n    venueName: row.venueName,\r\n    imageUrl: row.imageUrl,\r\n    status: row.status,\r\n    timeSlots: (row.timeSlots || []).map(ts => ({\r\n      id: ts.id || null,\r\n      startTime: ts.startTime,\r\n      endTime: ts.endTime,\r\n      capacity: ts.capacity,\r\n      remainingCapacity: ts.remainingCapacity,\r\n    })),\r\n  };\r\n  dialogVisible.value = true;\r\n};\r\n\r\nconst addTimeSlot = () => {\r\n  form.value.timeSlots = [\r\n    ...form.value.timeSlots,\r\n    { startTime: '', endTime: '', capacity: 1 }\r\n  ];\r\n};\r\n\r\nconst removeTimeSlot = (index) => {\r\n  form.value.timeSlots = form.value.timeSlots.filter((_, i) => i !== index);\r\n};\r\n\r\n\r\nconst handleSubmit = async () => {\r\n  if (!form.value.venueName.trim()) {\r\n    ElMessage.warning('请输入场地名称');\r\n    return;\r\n  }\r\n  if (form.value.timeSlots.length === 0) {\r\n    ElMessage.warning('请至少添加一个时间段');\r\n    return;\r\n  }\r\n  for (const ts of form.value.timeSlots) {\r\n    if (!ts.startTime || !ts.endTime) {\r\n      ElMessage.warning('所有时间段必须填写完整时间');\r\n      return;\r\n    }\r\n    if (ts.capacity <= 0) {\r\n      ElMessage.warning('容量必须大于0');\r\n      return;\r\n    }\r\n  }\r\n  const url = form.value.id ? '/admin/venue/update' : '/admin/venue/add';\r\n  // 后端需接收时间段数组字段timeSlots\r\n  const postData = {\r\n    id: form.value.id,\r\n    venueName: form.value.venueName,\r\n    imageUrl: form.value.imageUrl,\r\n    status: form.value.status,\r\n    timeSlots: form.value.timeSlots,\r\n  };\r\n  const res = await axios.post(url, postData);\r\n  if (res.data.code === 0) {\r\n    ElMessage.success('操作成功');\r\n    dialogVisible.value = false;\r\n    getVenueList();\r\n  } else {\r\n    ElMessage.error(res.data.msg || '操作失败');\r\n  }\r\n};\r\n\r\nconst handleDelete = async (id) => {\r\n  try {\r\n    await ElMessageBox.confirm('确认删除该场地？', '警告', { type: 'warning' });\r\n    const res = await axios.post('/admin/venue/delete', { id });\r\n    if (res.data.code === 0) {\r\n      ElMessage.success('删除成功');\r\n      getVenueList();\r\n    } else {\r\n      ElMessage.error(res.data.msg || '删除失败');\r\n    }\r\n  } catch {\r\n    // 取消操作无事发生\r\n  }\r\n};\r\n\r\ngetVenueList();\r\n</script>\r\n\r\n<style scoped>\r\n.header {\r\n  padding-bottom: 16px;\r\n}\r\n.pagination {\r\n  margin-top: 16px;\r\n  text-align: right;\r\n}\r\n</style>\r\n"]}]}